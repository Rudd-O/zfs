#!/bin/sh

get_devtype() {
  local typ
  typ=$(udevadm info --query=property --name="$1" | grep "^ID_FS_TYPE=" | sed 's|^ID_FS_TYPE=||')
  if [ "$typ" = "" ] ; then
     typ=$(blkid -c /dev/null "$1" -o value -s TYPE)
  fi
  echo "$typ"
}

get_pool_config() {
  # also present in 99zfssystemd
  local poolconfigtemp
  local poolconfigoutput
  poolconfigtemp=`mktemp`
  @sbindir@/zdb -C "$1" > "$poolconfigtemp" 2>&1
  if [ "$?" != "0" ] ; then
    poolconfigoutput=`cat "$poolconfigtemp"`
    dinfo "zfsexpandknowledge: pool $1 not in zpool.cache: $poolconfigoutput"
    @sbindir@/zdb -eC "$1" > "$poolconfigtemp" 2>&1
    if [ "$?" != "0" ] ; then
      poolconfigoutput=`cat "$poolconfigtemp"`
      dinfo "zfsexpandknowledge: pool $1 not found at all: $poolconfigoutput"
      echo -n > "$poolconfigtemp"
    fi
  fi
  cat "$poolconfigtemp"
  rm -f "$poolconfigtemp"
}

find_zfs_block_devices() {
    local dev
    local blockdev
    local mp
    local fstype
    local pool
    local key
    local n
    local poolconfigoutput
    numfields=`head -1 /proc/self/mountinfo | awk '{print NF}'`
    if [ "$numfields" == "10" ] ; then
        fields="n n n n mp n n fstype dev n"
    else
        fields="n n n n mp n n n fstype dev n"
    fi
    while read $fields ; do
       if [ "$fstype" != "zfs" ]; then continue ; fi
       if [ "$mp" == "$1" ]; then
           pool=$(echo "$dev" | cut -d / -f 1)
           poolconfig=$(get_pool_config "$pool")
           while read key rest ; do
               if [ "$key" == "path:" ] ; then
                    blockdev=`eval echo $rest`
                    echo `readlink -f $blockdev`
               fi
           done < <(echo "$poolconfig")
       fi
    done < /proc/self/mountinfo
}

check() {
    local mp
    local dev
    local blockdevs
    local fstype
    local majmin
    local _slavedev
    local _slavedevname
    local _slavedevtype
    local _slavemajmin
    local _dev

if [[ $hostonly ]]; then

    for mp in \
        "/" \
        "/etc" \
        "/bin" \
        "/sbin" \
        "/lib" \
        "/lib64" \
        "/usr" \
        "/usr/bin" \
        "/usr/sbin" \
        "/usr/lib" \
        "/usr/lib64" \
        "/boot";
    do
        mp=$(readlink -f "$mp")
        mountpoint "$mp" >/dev/null 2>&1 || continue
        blockdevs=$(find_zfs_block_devices "$mp")
        dinfo "zfsexpandknowledge: block devices backing ZFS dataset $mp: $blockdevs"
        for dev in $blockdevs
        do
            push host_devs "$dev"
            fstype=$(get_devtype "$dev")
            host_fs_types["$dev"]="$fstype"
            majmin=$(get_maj_min "$dev")
            if [[ -d /sys/dev/block/$majmin/slaves ]] ; then
                for _slavedev in /sys/dev/block/$majmin/slaves/*; do
                    [[ -f $_slavedev/dev ]] || continue
                    _slavedev=/dev/$(basename "$_slavedev")
                    _slavedevname=$(udevadm info --query=property --name="$_slavedev" | grep "^DEVNAME=" | sed 's|^DEVNAME=||')
                    _slavedevtype=$(get_devtype "$_slavedevname")
                    _slavemajmin=$(get_maj_min "$_slavedevname")
                    push host_devs "$_slavedevname"
                    host_fs_types["$_slavedevname"]="$_slavedevtype"
                done
            fi
        done
    done
    for a in "${!host_fs_types[@]}"
        do
        dinfo "zfsexpandknowledge: device $a of type ${host_fs_types[$a]}"
    done

fi

return 1
}
