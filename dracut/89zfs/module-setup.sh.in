#!/bin/sh

get_devtype() {
  local typ
  typ=$(udevadm info --query=property --name="$1" | grep "^ID_FS_TYPE=" | sed 's|^ID_FS_TYPE=||')
  if [ "$typ" = "" ] ; then
     typ=$(blkid -c /dev/null "$1" -o value -s TYPE)
  fi
  echo "$typ"
}

check() {
        local fs

	# We depend on udev-rules being loaded
	[ "$1" = "-d" ] && return 0

	# Verify the zfs tool chain
	test -x @sbindir@/zpool || return 1
	test -x @sbindir@/zfs || return 1
	test -x @sbindir@/zdb || return 1

        [[ $hostonly ]] || [[ $mount_needs ]] && {
            for fs in "${host_fs_types[@]}"; do
                echo "$fs" | grep -q "zfs$" && return 0
            done
            return 255
        }

	return 0
}

depends() {
	echo udev-rules
	return 0
}

installkernel() {
	instmods zfs
	instmods zcommon
	instmods znvpair
	instmods zavl
	instmods zunicode
	instmods spl
	instmods zlib_deflate
	instmods zlib_inflate
}

install() {
	inst_rules @udevruledir@/90-zfs.rules
	inst_rules @udevruledir@/69-vdev.rules
	inst_rules @udevruledir@/60-zvol.rules
	dracut_install @sbindir@/zfs
	dracut_install @sbindir@/zpool
	dracut_install @udevdir@/vdev_id
	dracut_install @udevdir@/zvol_id
	dracut_install mount.zfs
	dracut_install hostid
	inst_hook cmdline 95 "$moddir/parse-zfs.sh"
	inst_hook mount 98 "$moddir/mount-zfs.sh"

	# theoretically this only belongs in the initramfs if it is hostonly
	if [ -e @sysconfdir@/zfs/zpool.cache ]; then
		firstpool=`@sbindir@/zpool list -H -o name | head -1 ; true`
		if [ "$firstpool" != "" ] ; then
			@sbindir@/zpool set cachefile=@sysconfdir@/zfs/zpool.cache "$firstpool"
		fi
		inst @sysconfdir@/zfs/zpool.cache
	fi

	# theoretically this only belongs in the initramfs if it is hostonly
	if [ -e @sysconfdir@/modprobe.d/zfs.conf ]; then
		inst @sysconfdir@/modprobe.d/zfs.conf
	fi

	# theoretically this only belongs in the initramfs if it is hostonly
	if [ -e @sysconfdir@/zfs/vdev_id.conf ]; then
		inst @sysconfdir@/vdev_id.conf
	fi

	# Synchronize initramfs and system hostid
	TMP=`mktemp`
	AA=`hostid | cut -b 1,2`
	BB=`hostid | cut -b 3,4`
	CC=`hostid | cut -b 5,6`
	DD=`hostid | cut -b 7,8`
	printf "\x$DD\x$CC\x$BB\x$AA" >$TMP
	inst_simple "$TMP" /etc/hostid
	rm "$TMP"
}
